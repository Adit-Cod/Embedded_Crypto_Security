/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

/* The Following drivers will be built as part of this driver development
 * FPU
 * UART
 * GPIO
 * TIMEBASE
 * */

#include <stdint.h>
#include <stdio.h>
#include <stdbool.h>
#include <string.h>
#include "stm32f4xx.h"
#include "fpu.h"
#include "uart.h"
#include "timebase.h"
#include "bsp.h"
#include "adc.h"
#include "ceasars_cipher.h"

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
	/* Enable FPU */
	fpu_enable();
    /* initialize UART */
	uart_init();
	/* Initialize timer */
	timer_init();
    /* Initialize button and led */
	led_init();
    /* Initialize the button */
	button_init();
	/* Initialize the ADC module */
	pa1_adc_init();
    /* Start the conversion */
	startadc_conversion();

	printf("Testing the Ceasar's Module!\r\n");
	uint8_t plain_text[] = "Aditya is testing the crypto engine!";
	key = 3;
	uint8_t encrypted_data[];
	uint32_t length = strlen(plain_text);
	printf("The length of the plain_text = %d \r\n",length);
	puts(plain_text);

	ceasar_encrypt(&plain_text, key, &encrypted_data, length);
	puts(encypted_data);

}


